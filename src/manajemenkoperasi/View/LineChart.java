/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manajemenkoperasi.View;

import com.mysql.jdbc.Connection;
import manajemenkoperasi.Connection.UserConnection;
import static manajemenkoperasi.Connection.UserConnection.connection;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import java.sql.*;
import javax.swing.JOptionPane;
import static manajemenkoperasi.Connection.UserConnection.connection;

/**
 *
 * @author whisn
 */
public class LineChart extends javax.swing.JFrame {
      private static final long serialVersionUID = 1L;  
      Connection connection;

    /**
     * Creates new form LineChart
     */
    public LineChart(String title) {
        initComponents();
        connection = UserConnection.connection();
        // Create dataset  
        DefaultCategoryDataset dataset = createDataset();  
        // Create chart  
        JFreeChart chart = ChartFactory.createLineChart(  
            title, // Chart title  
            "Month", // X-Axis Label  
            "Profit", // Y-Axis Label  
            dataset  
            );  

        ChartPanel panel = new ChartPanel(chart);  
        setContentPane(panel);  
    }
    
    public DefaultCategoryDataset createDataset() {  

        String series1 = "Month";  
//        String series2 = s2;  

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();  
        
        try{
            java.sql.Statement st = connection.createStatement();
            ResultSet rs = (ResultSet) st.executeQuery("SELECT MONTH(t.date) AS month, t.date, SUM(t.profit) as total FROM transactions t GROUP BY t.date");  
            int total = 0;
            int curMonth = 0;
            
            while(rs.next()) {
                int m = rs.getInt("month");
                
//                JOptionPane.showMessageDialog(null, m);
//                JOptionPane.showMessageDialog(null, getMonthName(m));
               
                if(curMonth == 0) {
                    curMonth = m;
                }
                
                if(curMonth == m){
                    total += rs.getInt("total");
                }else {
                    JOptionPane.showMessageDialog(null, "total : " + total + getMonthName(curMonth));
                    dataset.addValue(total, series1, getMonthName(curMonth));  
                    curMonth = m;
                    total = 0;
                    total += rs.getInt("total");
                }
                
                if(!rs.next()) {
                    JOptionPane.showMessageDialog(null, "last data ");
                    dataset.addValue(total, series1, getMonthName(m));  
                }
            }

        } catch(Exception e) {
            System.out.println(e);
        } 
        return dataset;  
    }  
    
    public String getMonthName(Integer n) {
        switch (n) {
            case 1 : 
                return "January";
            case 2 :
                return "February";
            case 3 :
                return "March";
            case 4 : 
                return "April";
            case 5 : 
                return "May";
            case 6 : 
                return "June";
            case 7 : 
                return "July";
            case 8 : 
                return "August";
            case 9 : 
                return "September";
            case 10 : 
                return "October";
            case 11 : 
                return "November";
            case 12 : 
                return "Desember";
            default :
                return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LineChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LineChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LineChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LineChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LineChart("Grafik Profit ").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
